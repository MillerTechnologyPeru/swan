#!/usr/bin/env python

"""
//===---------------------------------------------------------------------===//
//
// This source file is part of the SWAN open source project
//
// Copyright (c) 2019 Maple @ University of Alberta
// All rights reserved. This program and the accompanying materials (unless
// otherwise specified by a license inside of the accompanying material)
// are made available under the terms of the Eclipse Public License v2.0
// which accompanies this distribution, and is available at
// http://www.eclipse.org/legal/epl-v20.html
//
//===---------------------------------------------------------------------===//
"""

import argparse
import os
import os.path
from os import path
import subprocess
import sys

if __name__ == '__main__' and __package__ is None:
    from os import sys, path
    sys.path.append(path.dirname(path.dirname(path.abspath(__file__))))
from shared.constants import *

def clean():
    system("./gradlew clean")

def setup_swan():
    if not path.exists("lib/libswiftWala.dylib"):
        system("tar -xf lib/libswiftWala.dylib.tar -C lib/")
    if not path.exists('gradle.properties'):
        spaced_print("Configuring gradle.properties...")
        with open('gradle.properties', 'w') as file:
            file.write(\
                "PACKAGES_DIR=" + PACKAGES_DIR + os.linesep\
                + "WALA_DIR=" + WALA_DIR + os.linesep\
                + "SWAN_DIR=" + ROOT + os.linesep)

def build_swan():
    system("./gradlew assemble")
    spaced_print("NOTE: Make sure environment var `PATH_TO_SWAN` is set before running SWAN.")

def main():
    check_dir()
    parser = argparse.ArgumentParser()
    parser.add_argument("--clean", action="store_true")
    args = parser.parse_args()

    if args.clean:
        clean()

    setup_swan()
    build_swan()

if __name__ == "__main__":
    try:
        sys.exit(main())
    except KeyboardInterrupt:
        sys.exit(1)