plugins {
    id "com.cisco.external-build" version "1.14"
}

group 'ca.maple.swan'

import com.cisco.gradle.externalbuild.ExternalNativeLibrarySpec
import com.cisco.gradle.externalbuild.tasks.CMake

def getIntermediateDir = { binary ->
    file("${buildDir}/external-build/${binary.component.name}/${binary.targetPlatform.name}")
}

def getInstallDir = { binary ->
    file("${buildDir}/install/${binary.component.name}/${binary.targetPlatform.name}")
}

project(":ca.maple.swan.translator") {
    model {
        components {
            swiftWala(ExternalNativeLibrarySpec) {
                buildConfig(CMake) {
                    def intDir = getIntermediateDir(binary)
                    def outputDir = getInstallDir(binary)

                    redirectOutput = false

                    cmakeRoot '.'
                    cmakeArgs "-DCMAKE_INSTALL_PREFIX=${outputDir}",
                        "-DPACKAGES_DIR=${PACKAGES_DIR}"
                    targets 'swiftWala', 'install'
                    inputs.dir 'lib'
                    inputs.file 'CMakeLists.txt'
                    workingDir intDir
                }
                binaries.withType(StaticLibraryBinarySpec) {
                    buildable = false
                }
                buildOutput {
                    def outputDir = getInstallDir(binary)
                    switch (targetPlatform.operatingSystem.name) {
                        case 'linux':
                            outputFile = file("${outputDir}/lib/libswiftWala.so")
                            break
                        case 'osx':
                            outputFile = file("${outputDir}/lib/libswiftWala.dylib")
                            break
                    }
                    exportedHeaders {
                      srcDir "${projectDir}/include"
                    }
                }
            }

        }
    }

}
